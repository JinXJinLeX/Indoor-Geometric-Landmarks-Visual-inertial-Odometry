%YAML:1.0

#common parameters
imu_topic: "/imu_raw"
image_topic: "/left_camera/image"
output_path: "/home/scott/vins_output/"




#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 1440
image_height: 1080
distortion_parameters:
   k1: -0.060927
   k2: -0.006735
   p1: 0.001526
   p2: -0.000270
   k3: 0
projection_parameters:
   #fx: 1748.174438
   #fy: 1748.798584
   #cx: 769.515703
   #cy: 577.102565
     fx: 1757.772396106951
     fy: 1756.9598145527343
     cx: 709.2308822435922
     cy: 557.9968141594711

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   #data: [ 9.9934608718980233e-01, -1.5715484428488590e-02,-3.2564114721728155e-02,
    #       3.2359037356803094e-02, -1.3131917124154624e-02,9.9939003669937865e-01,
    #       -1.6133527815482926e-02, -9.9979026615676858e-01,-1.2614792047622947e-02]
   #data: [ 9.9934608718980233e-01, 0,0,
     #      0, 0,9.9939003669937865e-01,
    #      0, -9.9979026615676858e-01,0]
   data: [ 0.99857375, -0.03735285, -0.03814746,
        0.03815494, -0.0005129, 0.9992717,
       -0.03734522, -0.99930201, 0.00091303]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   #data: [-1.7434527332030676e-02,  1.7171139776467173e-01, -4.5251036141047592e-02]
   data: [-0.04134904,  0.00464796, 0.15661172]

#feature traker paprameters
max_cnt: 400            # max feature number in feature tracking
min_dist: 40            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.4        # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.063834         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.014422         # accelerometer bias random work noise standard deviation. #0.02
gyr_w: 9.4617e-04       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805       # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
fast_relocalization: 1             # useful in real-time and large project
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/sz/liosam_result/" # save and load path

#unsynchronization parameters
estimate_td: 0                     # online estimate time offset between camera and imu
td: 0.000                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ



mono pinhole calibration...
D = [-0.060942232683765425, 0.058541600478018124, 0.0014776431520420964, 0.0020024521130011064, 0.0]
K = [1765.6829014852697, 0.0, 782.3520861875847, 0.0, 1758.7990336248554, 565.9993972905113, 0.0, 0.0, 1.0]
R = [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
P = [1748.2642822265625, 0.0, 784.4959079035762, 0.0, 0.0, 1747.68896484375, 566.4813386453607, 0.0, 0.0, 0.0, 1.0, 0.0]
None
# oST version 5.0 parameters


[image]

width
1440

height
1080

[narrow_stereo]

camera matrix
1765.682901 0.000000 782.352086
0.000000 1758.799034 565.999397
0.000000 0.000000 1.000000

distortion
-0.060942 0.058542 0.001478 0.002002 0.000000

rectification
1.000000 0.000000 0.000000
0.000000 1.000000 0.000000
0.000000 0.000000 1.000000

projection
1748.264282 0.000000 784.495908 0.000000
0.000000 1747.688965 566.481339 0.000000
0.000000 0.000000 1.000000 0.000000

D = [-0.060942232683765425, 0.058541600478018124, 0.0014776431520420964, 0.0020024521130011064, 0.0]
K = [1765.6829014852697, 0.0, 782.3520861875847, 0.0, 1758.7990336248554, 565.9993972905113, 0.0, 0.0, 1.0]
R = [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
P = [1748.2642822265625, 0.0, 784.4959079035762, 0.0, 0.0, 1747.68896484375, 566.4813386453607, 0.0, 0.0, 0.0, 1.0, 0.0]
# oST version 5.0 parameters


[image]

width
1440

height
1080

[narrow_stereo]

camera matrix
1765.682901 0.000000 782.352086
0.000000 1758.799034 565.999397
0.000000 0.000000 1.000000

distortion
-0.060942 0.058542 0.001478 0.002002 0.000000

rectification
1.000000 0.000000 0.000000
0.000000 1.000000 0.000000
0.000000 0.000000 1.000000

projection
1748.264282 0.000000 784.495908 0.000000
0.000000 1747.688965 566.481339 0.000000
0.000000 0.000000 1.000000 0.000000
